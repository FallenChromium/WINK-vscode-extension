{
  "name": "wink-vscode-extension",
  "description": "Extension for SCs language support",
  "author": "Microsoft Corporation",
  "license": "MIT",
  "version": "1.0.3",
  "repository": {
    "type": "git",
    "url": "https://github.com/artrayme/WINK-vscode-extension"
  },
  "publisher": "artrayme",
  "categories": [],
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.67.0"
  },
  "activationEvents": [
    "onLanguage:scs",
    "onLanguage:gwf"
  ],
  "main": "./extension/out/extension.js",
  "contributes": {
    "languages": [
      {
        "id": "scs",
        "aliases": [
          "scs",
          "scsi"
        ],
        "extensions": [
          ".scs",
          ".scsi"
        ],
        "configuration": "./language-configuration.json"
      },
      {
        "id": "gwf",
        "aliases": [
          "gwf",
          "xml"
        ],
        "extensions": [
          ".gwf"
        ]
      }
    ],
    "grammars": [
      {
        "language": "scs",
        "scopeName": "source.scs",
        "path": "./syntaxes/scs.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "scs",
        "path": "./snippets/scs.json"
      }
    ],
    "configurationDefaults": {
      "[scs]": {
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": false
        },
        "editor.tabSize": 2,
        "editor.insertSpaces": true,
        "editor.detectIndentation": true,
        "editor.trimAutoWhitespace": true,
        "editor.autoClosingBrackets": "beforeWhitespace"
      }
    },
    "commands": [
      {
        "command": "scs.connect",
        "title": "Connect to the running sc-machine",
        "category": "SCs",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "scs.disconnect",
        "title": "Disconnect from the connected sc-machine",
        "category": "SCs",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "scs.upload",
        "title": "Save current SCs to the connected sc-machine",
        "category": "SCs",
        "icon": "$(save)"
      },
      {
        "command": "scs.preview",
        "title": "Temporary load current SCs to the connected sc-machine",
        "category": "SCs",
        "icon": "$(open-preview)"
      },
      {
        "command": "scs.unload",
        "title": "Delete current SCs from the connected sc-machine",
        "category": "SCs",
        "icon": "$(remove)"
      },
      {
        "command": "scs.uploadAll",
        "title": "Save all SCs files from the current project in sc-machine",
        "category": "SCs",
        "icon": "$(save-all)"
      },
      {
        "command": "scs.previewAll",
        "title": "Temporary load all SCs files from the current project in sc-machine",
        "category": "SCs"
      },
      {
        "command": "scs.unloadAll",
        "title": "Delete all SCs from the connected sc-machine",
        "category": "SCs",
        "icon": "$(clear-all)"
      },
      {
        "command": "scs.findByTemplate",
        "title": "Find all constructions by scs-template",
        "category": "SCs",
        "icon": "$(search)"
      },
      {
        "command": "scs.genScs",
        "title": "Generate Scs by entity name",
        "category": "SCs",
        "icon": "$(settings-gear)"
      },
      {
        "command": "gwf.toScs",
        "title": "Convert GWF to SCs",
        "category": "SCs",
        "icon": "$(open-preview)"
      }
    ],
    "keybindings": [
      {
        "command": "scs.preview",
        "key": "f5",
        "when": "resourceLangId == scs || resourceLangId == gwf"
      }
    ],
    "viewsWelcome": [
      {
        "view": "loadedFiles",
        "contents": "No loaded files yet.\nStart by uploading files with F5 or\n [Upload all project](command:scs.uploadAll)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "scsLoader",
          "title": "Loaded files manager",
          "icon": "$(clippy)"
        }
      ]
    },
    "views": {
      "scsLoader": [
        {
          "id": "loadedFiles",
          "name": "Loaded files",
          "visibility": "visible"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "scs.unload",
          "when": "view == loadedFiles"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == gwf",
          "command": "gwf.toScs",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == scs",
          "command": "scs.preview",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == scs",
          "command": "scs.upload",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == scs",
          "command": "scs.findByTemplate",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile:client": "tsc -p ./extension/tsconfig.json",
    "compile:server": "cd ./SCs-language-server && npm run compile",
    "watch:client": "tsc -w -p ./extension/tsconfig.json",
    "watch:server": "tsc -w -p ./SCs-language-server/tsconfig.json",
    "compile": "npm run compile:client && npm run compile:server",
    "lint": "eslint ./extension/src ./SCs-language-server/src --ext .ts,.tsx",
    "postinstall": "cd extension && npm install && cd ../SCs-language-server && npm install && cd ..",
    "test": "sh ./scripts/e2e.sh"
  },
  "devDependencies": {
    "@types/mocha": "^5.2.0",
    "@types/node": "^16.11.7",
    "@types/ws": "^8.5.3",
    "@typescript-eslint/eslint-plugin": "^5.30.0",
    "@typescript-eslint/parser": "^5.30.0",
    "eslint": "^8.13.0",
    "typescript": "^4.7.7"
  },
  "dependencies": {
    "dom-parser": "^0.1.6"
  }
}
